#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
cache.last-mime-type = {loc('unknown:<untitled> #30'): 'text/x-diff',
                        loc('unknown:<untitled> #28'): 'text/x-diff',
                        loc('unknown:<untitled> #24'): 'text/x-diff',
                        loc('unknown:<untitled> #25'): 'text/x-diff',
                        loc('unknown:<untitled> #1'): 'text/x-diff',
                        loc('unknown:<untitled> #2'): 'text/x-diff',
                        loc('unknown:<untitled> #3'): 'text/x-diff',
                        loc('unknown:<untitled> #4'): 'text/x-diff',
                        loc('unknown:<untitled> #5'): 'text/x-diff',
                        loc('unknown:<untitled> #6'): 'text/x-diff',
                        loc('unknown:<untitled> #7'): 'text/x-diff',
                        loc('unknown:<untitled> #8'): 'text/x-diff',
                        loc('unknown:<untitled> #9'): 'text/x-diff',
                        loc('unknown:<untitled> #10'): 'text/x-diff',
                        loc('unknown:<untitled> #11'): 'text/x-diff',
                        loc('unknown:<untitled> #12'): 'text/x-diff',
                        loc('unknown:<untitled> #13'): 'text/x-diff',
                        loc('unknown:<untitled> #14'): 'text/x-diff',
                        loc('unknown:<untitled> #15'): 'text/x-diff',
                        loc('unknown:<untitled> #16'): 'text/x-diff',
                        loc('unknown:<untitled> #17'): 'text/x-diff',
                        loc('unknown:<untitled> #18'): 'text/x-diff',
                        loc('unknown:<untitled> #19'): 'text/x-diff',
                        loc('unknown:<untitled> #20'): 'text/x-diff',
                        loc('unknown:<untitled> #21'): 'text/x-diff',
                        loc('unknown:<untitled> #22'): 'text/x-diff',
                        loc('unknown:<untitled> #23'): 'text/x-diff'}
debug.breakpoints = {loc('MainRonenTalmon.py'): {65L: (0,
        None,
        1,
        0)},
                     loc('Mymain.py'): {99L: (0,
        None,
        1,
        0),
        110: (0,
              None,
              1,
              0)},
                     loc('__main.py'): {24: (0,
        None,
        1,
        0)},
                     loc('vol2data.py'): {10L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('Main.py'): {'stack[-1].globals': (-3,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        '<network timeout during evaluate>',
        None,
        None,
        0),
                                     'stack[0].locals': (-3,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        '<network timeout during evaluate>',
        None,
        None,
        0)},
                    loc('MainRonenTalmon.py'): {},
                    loc('markMitsubaLib.py'): {},
                    loc('mitsubaWrapperLib.py'): {},
                    loc('nextBestViewLib.py'): {},
                    loc('oldmain.py'): {},
                    loc('vol2data.py'): {}}
debug.show-args-dialog = {loc('Main.py'): False,
                          loc('MainRonenTalmon.py'): False}
edit.file-encoding = {loc('sendMyEmail.py'): 'UTF-8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'N998oScho2VauAL9F28sT6o3D4'\
        'hdH5JV',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.197286012526096,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(3,)],
                                 'top-node': (0,)},
                        'flat': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('___main.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('markMitsubaLib.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('class def',
        loc('markMitsubaLib.py'),
        'Mitsuba')]},
        loc('nextBestViewLib.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('nextBestViewLib.py'),
        'cams')]},
        u'By Module': {'expanded-nodes': [],
                       'selected-nodes': [None],
                       'top-node': None},
        loc('Main.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('Main.py'),
                                       'archAngleSize')]},
        loc('__main.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('__main.py'),
        'cams')]},
        loc('markCoreLib.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('markCoreLib.py'),
        'cam')]},
        loc('miscGeometry.py'): {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': [('function def',
        loc('miscGeometry.py'),
        'calcAngleVectors')]},
        loc('mitsubaWrapperLib.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribut'\
        'e',
        loc('mitsubaWrapperLib.py'),
        'mitsuba_path')]],
                                      'top-node': [('class def',
        loc('mitsubaWrapperLib.py'),
        'Mitsuba')]},
        loc('parseVolumeDada.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('parseVolumeDada.py'),
        'bounding_box')]},
        loc('unknown:<untitled> #26'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        u'All Classes': {'expanded-nodes': [],
                         'selected-nodes': [None],
                         'top-node': None},
        loc('projLocalPath.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('projLocalPath.py'),
        'base_path')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [7,
                          4],
        'notebook_display': 'normal',
        'notebook_percent': 0.43214285714285716,
        'override_title': None,
        'pagelist': [('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'scene_name',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': True,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 153L,
                       'folded-linenos': [],
                       'history': {u'file:/home/addalin/mitsuba_sim/main_mitsuba_sim.py': ["o"\
        "s.system('pwd')\n",
        "os.system('pwd')[1]\n",
        'self.params\n',
        "cams_cfg['cams']\n",
        "cams_cfg['cams']['IMX264']\n",
        "a = cams_cfg['simMode']\n",
        "a['save_results']\n",
        "with open(fileName,'r') as ymlfile:\ncams_cfg = yaml.load(ymlfile)"\
        "\n\n",
        'cams_cfg\n',
        "cams_cfg['simMode']\n",
        "cams_cfg['simMode']['nViews']\n",
        "a= cams_cfg['simMode']['nViews']\n",
        'a[1]\n',
        'a[2]\n',
        'size(a)\n',
        'len(a)\n',
        'camsParam\n',
        'screenParams\n',
        'type(cfgFile)\n',
        "np.array(sceneParams['boundsTranslation'])\n",
        "np.array(simMode['nViews'])\n",
        "type(np.array(simMode['nViews']))\n",
        'a = np.array(sim_cfg)\n',
        'a\n',
        "a['cams']\n",
        'type(sim_cfg)\n',
        'sim_cfg.\n',
        'sim_cfg.keys\n',
        'sim_cfg.keys()\n',
        '"[" in sim_cfg\n',
        "\"[\" in sim_cfg['cams']\n",
        "\"[\" in sim_cfg['scene']\n",
        "sim_cfg['simulation']\n",
        "im_cfg['simulation']['nViews']\n",
        "sim_cfg['simulation']['nViews']\n",
        "\"[\" in sim_cfg['simulation']\n",
        "type(sim_cfg['simulation']['nViews'])\n",
        'for key in sceneParams:\n    if sceneParams[key] is list\n        s'\
        'ceneParams[key] = np.array(sceneParams[key])\n\n',
        'for key in sceneParams:\n    if sceneParams[key] is list:\n        '\
        'sceneParams[key] = np.array(sceneParams[key])\n\n',
        "sceneParams\n{'boundsTran\n\n",
        "sceneParams['boundsTranslation']\n",
        'for key in sceneParams:\n    if type(sceneParams[key]) is list:\n  '\
        '      sceneParams[key] = np.array(sceneParams[key])\n\n',
        "type(sceneParams['boundsTranslation'])\n",
        'sceneParams\n',
        'simMode\n',
        "simMode['nViews']\n",
        "type(simMode['nViews'])\n"]},
                       'launch-id': None,
                       'sel-line': 166L,
                       'sel-line-start': 11793L,
                       'selection_end': 11793L,
                       'selection_start': 11793L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        'loadScene'),
                                       ('eval',
        u'paramMap'),
                                       ('eval',
        ''),
                                       ('eval',
        u"self.fileResolver.resolve(scene_name + '.xml')"),
                                       ('eval',
        u"SceneHandler.loadScene(self.fileResolver.resolve(scene_name + '.xml'), paramMap)"),
                                       ('eval',
        'SceneHandler.loadScene')],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(5,)],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 1817L,
                       'folded-linenos': [],
                       'history': {None: ['import csv \n',
        "reader = csv.DictReader('results_log.csv',delimeter=',')\n",
        "reader = csv.DictReader('results_log.csv',delimiter=',')\n",
        'reader._fieldnames\n',
        "reader = csv.DictReader('/home/addalin/mitsuba_sim/results_log.csv'"\
        ",delimiter=',')\n",
        'reader.fieldnames[1]\n',
        "reader['nViews']\n",
        "reader[1]['nVies']\n",
        'reader[1]\n',
        'reader1)\n',
        'reader(1)\n',
        'reader.next\n',
        'reader.next()\n',
        'reader\n',
        "f_obj =open('/home/addalin/mitsuba_sim/results_log.csv',r)\n",
        "f_obj =open('/home/addalin/mitsuba_sim/results_log.csv','r')\n",
        "reader = csv.DictReader(f_obj,delimiter=',')\n",
        'type(reader)\n',
        'for line in reader:\n    print(line)\n\n',
        'reader.dialect\n',
        'reader.\n',
        'reader.fieldnames\n',
        'reader.line_num\n',
        'import pandas\n',
        "\t\nHere are some minimal complete examples how to read CSV files a"\
        "nd how to write CSV files with Python.\n\nPython 2+3: Reading a CSV"\
        " file\n\nPure Python\n\n# -*- coding: utf-8 -*-\nimport csv\n\n# De"\
        "fine data\ndata = [(1, \"A towel,\", 1.0),\n        (42, \" it says"\
        ", \", 2.0),\n        (1337, \"is about the most \", -1),\n        ("\
        "0, \"massively useful thing \", 123),\n        (-2, \"an interstell"\
        "ar hitchhiker can have.\", 3)]\n\n# Write CSV file\nwith open('test"\
        ".csv', 'w') as fp:\n    writer = csv.writer(fp, delimiter=',')\n   "\
        " # writer.writerow([\"your\", \"header\", \"foo\"])  # write header"\
        "\n    writer.writerows(data)\n\n# Read CSV file\nwith open('test.cs"\
        "v', 'r') as fp:\n    reader = csv.reader(fp, delimiter=',', quotech"\
        "ar='\"')\n    # next(reader, None)  # skip the headers\n    data_re"\
        "ad = [row for row in reader]\n\nprint(data_read)\nAfter that, the c"\
        "ontents of data_read are\n\n[['1', 'A towel,', '1.0'],\n ['42', ' i"\
        "t says, ', '2.0'],\n ['1337', 'is about the most ', '-1'],\n ['0', "\
        "'massively useful thing ', '123'],\n ['-2', 'an interstellar hitchh"\
        "iker can have.', '3']]\nRelated\n\nHow do I write data into csv for"\
        "mat as string (not file)?\nPandas\n\nimport pandas as pd\n\n\n",
        'import pandas as pd\n',
        "Here are some minimal complete examples how to read CSV files and h"\
        "ow to write CSV files with Python.\n\nPython 2+3: Reading a CSV fil"\
        "e\n\nPure Python\n\n# -*- coding: utf-8 -*-\nimport csv\n\n# Define"\
        " data\ndata = [(1, \"A towel,\", 1.0),\n        (42, \" it says, \""\
        ", 2.0),\n        (1337, \"is about the most \", -1),\n        (0, "\
        "\"massively useful thing \", 123),\n        (-2, \"an interstellar "\
        "hitchhiker can have.\", 3)]\n\n# Write CSV file\nwith open('test.cs"\
        "v', 'w') as fp:\n    writer = csv.writer(fp, delimiter=',')\n    # "\
        "writer.writerow([\"your\", \"header\", \"foo\"])  # write header\n"\
        "    writer.writerows(data)\n\n# Read CSV file\nwith open('test.csv'"\
        ", 'r') as fp:\n    reader = csv.reader(fp, delimiter=',', quotechar"\
        "='\"')\n    # next(reader, None)  # skip the headers\n    data_read"\
        " = [row for row in reader]\n\nprint(data_read)\nAfter that, the con"\
        "tents of data_read are\n\n[['1', 'A towel,', '1.0'],\n ['42', ' it "\
        "says, ', '2.0'],\n ['1337', 'is about the most ', '-1'],\n ['0', 'm"\
        "assively useful thing ', '123'],\n ['-2', 'an interstellar hitchhik"\
        "er can have.', '3']]\nRelated\n\nHow do I write data into csv forma"\
        "t as string (not file)?\nPandas\n\nimport pandas as pd\n\n",
        "fd = pd.read_csv('results_log.csv')\n",
        'fd\n',
        'fd.head\n',
        'fd[1]\n',
        'print(df)\n',
        "fd = pd.read_csv('results_log.csv',sep=',')\n",
        'print(fd)\n',
        'fd[0]\n']},
                       'launch-id': None,
                       'sel-line': 1830L,
                       'sel-line-start': 144497L,
                       'selection_end': 144497L,
                       'selection_start': 144497L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('miscGeometry.py'),
        {'attrib-starts': [('normalize',
                            5)],
         'first-line': 24L,
         'folded-linenos': [],
         'sel-line': 7L,
         'sel-line-start': 141L,
         'selection_end': 156L,
         'selection_start': 156L},
        1501489756.036493],
        [loc('main_mitsuba_sim.py'),
         {'attrib-starts': [],
          'first-line': 224L,
          'folded-linenos': [92L,
                             149L,
                             157L,
                             169L],
          'sel-line': 239L,
          'sel-line-start': 9519L,
          'selection_end': 9519L,
          'selection_start': 9519L},
         1501489797.8473],
        [loc('sim_config.yml'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L},
         1501489820.994202],
        [loc('main_mitsuba_sim.py'),
         {'attrib-starts': [('setSimParams',
                             19)],
          'first-line': 48L,
          'folded-linenos': [92L,
                             149L,
                             157L,
                             169L],
          'sel-line': 53L,
          'sel-line-start': 1820L,
          'selection_end': 1820L,
          'selection_start': 1820L},
         1501489911.085998],
        [loc('miscGeometry.py'),
         {'attrib-starts': [('normalize',
                             5)],
          'first-line': 24L,
          'folded-linenos': [],
          'sel-line': 7L,
          'sel-line-start': 141L,
          'selection_end': 156L,
          'selection_start': 156L},
         1501489911.941382],
        [loc('sim_config.yml'),
         {'attrib-starts': [],
          'first-line': 36L,
          'folded-linenos': [],
          'sel-line': 50L,
          'sel-line-start': 1136L,
          'selection_end': 1146L,
          'selection_start': 1146L},
         1501489922.585871],
        [loc('main_mitsuba_sim.py'),
         {'attrib-starts': [('setSimParams',
                             19)],
          'first-line': 48L,
          'folded-linenos': [92L,
                             149L,
                             157L,
                             169L],
          'sel-line': 53L,
          'sel-line-start': 1820L,
          'selection_end': 1820L,
          'selection_start': 1820L},
         1501489943.198394],
        [loc('miscGeometry.py'),
         {'attrib-starts': [('normalize',
                             5)],
          'first-line': 24L,
          'folded-linenos': [],
          'sel-line': 7L,
          'sel-line-start': 141L,
          'selection_end': 156L,
          'selection_start': 156L},
         1501489945.141039],
        [loc('sim_config.yml'),
         {'attrib-starts': [],
          'first-line': 39L,
          'folded-linenos': [],
          'sel-line': 57L,
          'sel-line-start': 1292L,
          'selection_end': 1300L,
          'selection_start': 1300L},
         1501489954.290594],
        [loc('main_mitsuba_sim.py'),
         {'attrib-starts': [],
          'first-line': 224L,
          'folded-linenos': [92L,
                             149L,
                             157L,
                             169L],
          'sel-line': 239L,
          'sel-line-start': 9527L,
          'selection_end': 9527L,
          'selection_start': 9527L},
         1501489966.486913],
        [loc('sim_config.yml'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 184L,
          'selection_end': 197L,
          'selection_start': 197L},
         1501490002.936083],
        [loc('main_mitsuba_sim.py'),
         {'attrib-starts': [('setSimParams',
                             19)],
          'first-line': 25L,
          'folded-linenos': [52L,
                             109L,
                             117L,
                             129L],
          'sel-line': 19L,
          'sel-line-start': 441L,
          'selection_end': 482L,
          'selection_start': 472L},
         1501490429.771624],
        [loc('sim_config.yml'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 184L,
          'selection_end': 197L,
          'selection_start': 197L},
         1501490432.842466],
        [loc('main_mitsuba_sim.py'),
         {'attrib-starts': [('saveResults',
                             130)],
          'first-line': 4L,
          'folded-linenos': [12L,
                             19L,
                             53L,
                             110L,
                             118L,
                             130L],
          'sel-line': 130L,
          'sel-line-start': 4883L,
          'selection_end': 4898L,
          'selection_start': 4887L},
         1501492855.359936],
        [loc('../anaconda2/lib/python2.7/csv.py'),
         {'attrib-starts': [('DictReader',
                             72),
                            ('DictReader.next',
                             103)],
          'first-line': 91L,
          'folded-linenos': [],
          'sel-line': 107L,
          'sel-line-start': 3328L,
          'selection_end': 3328L,
          'selection_start': 3328L},
         1501493286.692449],
        [loc('main_mitsuba_sim.py'),
         {'attrib-starts': [('saveResults',
                             130)],
          'first-line': 4L,
          'folded-linenos': [12L,
                             19L,
                             53L,
                             110L,
                             118L,
                             130L],
          'sel-line': 130L,
          'sel-line-start': 4883L,
          'selection_end': 4898L,
          'selection_start': 4887L},
         1501498226.738377],
        [loc('sim_config.yml'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 184L,
          'selection_end': 197L,
          'selection_start': 197L},
         1501498273.717294],
        [loc('mitsubaWrapperLib.py'),
         {'attrib-starts': [('Mitsuba',
                             29),
                            ('Mitsuba.Render',
                             208)],
          'first-line': 222L,
          'folded-linenos': [],
          'sel-line': 237L,
          'sel-line-start': 13033L,
          'selection_end': 13072L,
          'selection_start': 13072L},
         1501498422.165391],
        [loc('miscGeometry.py'),
         {'attrib-starts': [('normalize',
                             5)],
          'first-line': 24L,
          'folded-linenos': [],
          'sel-line': 7L,
          'sel-line-start': 141L,
          'selection_end': 156L,
          'selection_start': 156L},
         1501498422.509762],
        [loc('main_mitsuba_sim.py'),
         {'attrib-starts': [],
          'first-line': 173L,
          'folded-linenos': [12L,
                             19L,
                             53L,
                             110L,
                             118L,
                             130L],
          'sel-line': 178L,
          'sel-line-start': 7044L,
          'selection_end': 7093L,
          'selection_start': 7079L},
         1501498522.595921]],
        20),
        'current-loc': loc('Main.py'),
        'editor-state-list': [(loc('Main.py'),
                               {'attrib-starts': [],
                                'first-line': 159L,
                                'folded-linenos': [],
                                'sel-line': 19L,
                                'sel-line-start': 461L,
                                'selection_end': 483L,
                                'selection_start': 483L}),
                              (loc('main_mitsuba_sim.py'),
                               {'attrib-starts': [],
                                'first-line': 173L,
                                'folded-linenos': [12L,
        19L,
        53L,
        110L,
        118L,
        130L],
                                'sel-line': 178L,
                                'sel-line-start': 7044L,
                                'selection_end': 7093L,
                                'selection_start': 7079L}),
                              (loc('miscGeometry.py'),
                               {'attrib-starts': [('normalize',
        5)],
                                'first-line': 24L,
                                'folded-linenos': [],
                                'sel-line': 7L,
                                'sel-line-start': 141L,
                                'selection_end': 156L,
                                'selection_start': 156L}),
                              (loc('mitsubaWrapperLib.py'),
                               {'attrib-starts': [('Mitsuba',
        29),
        ('Mitsuba.Render',
         208)],
                                'first-line': 222L,
                                'folded-linenos': [],
                                'sel-line': 237L,
                                'sel-line-start': 13033L,
                                'selection_end': 13072L,
                                'selection_start': 13072L}),
                              (loc('mitsubaWrapperLib_.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L}),
                              (loc('parseVolumeDada.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L}),
                              (loc('sim_config.yml'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 8L,
                                'sel-line-start': 184L,
                                'selection_end': 197L,
                                'selection_start': 197L})],
        'has-focus': False,
        'locked': False},
        [loc('Main.py'),
         loc('main_mitsuba_sim.py'),
         loc('miscGeometry.py'),
         loc('mitsubaWrapperLib.py'),
         loc('mitsubaWrapperLib_.py'),
         loc('parseVolumeDada.py'),
         loc('sim_config.yml')]),
                               'open_files': [u'mitsubaWrapperLib_.py',
        u'parseVolumeDada.py',
        u'sim_config.yml',
        u'mitsubaWrapperLib.py',
        u'miscGeometry.py',
        u'main_mitsuba_sim.py',
        u'Main.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.3989431968295905},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.3652173913043478},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1920,
                         31,
                         1918,
                         992)}]}
guimgr.recent-documents = [loc('Main.py'),
                           loc('main_mitsuba_sim.py'),
                           loc('miscGeometry.py'),
                           loc('mitsubaWrapperLib.py'),
                           loc('sim_config.yml'),
                           loc('parseVolumeDada.py'),
                           loc('mitsubaWrapperLib_.py')]
guimgr.visual-state = {loc('../../../ProgramData/Anaconda2/lib/os.py'): {'at'\
        'trib-starts': [('_Environ',
                         467),
                        ('_Environ.__getitem__',
                         -1)],
        'first-line': 435L,
        'folded-linenos': [],
        'sel-line': 424L,
        'sel-line-start': 13360L,
        'selection_end': 13360L,
        'selection_start': 13360L},
                       loc('../../../ProgramData/Anaconda2/lib/site-packages/matplotlib/backends/backend_qt5.py'): {'a'\
        'ttrib-starts': [('FigureCanvasQT',
                          218),
                         ('FigureCanvasQT.__init__',
                          228)],
        'first-line': 224L,
        'folded-linenos': [],
        'sel-line': 237L,
        'sel-line-start': 7697L,
        'selection_end': 7798L,
        'selection_start': 7706L},
                       loc('../../../ProgramData/Anaconda2/lib/site-packages/mayavi-4.5.0-py2.7-win-amd64.egg/mayavi/tools/engine_manager.py'): {'a'\
        'ttrib-starts': [('check_backend',
                          25)],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 46L,
        'sel-line-start': 1692L,
        'selection_end': 1726L,
        'selection_start': 1726L},
                       loc('../../../ProgramData/Anaconda2/lib/site-packages/numpy/core/fromnumeric.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 189L,
        'selection_end': 189L,
        'selection_start': 189L},
                       loc('../../../ProgramData/Anaconda2/lib/site-packages/numpy/core/shape_base.py'): {'a'\
        'ttrib-starts': [('vstack',
                          179)],
        'first-line': 203L,
        'folded-linenos': [],
        'sel-line': 229L,
        'sel-line-start': 5628L,
        'selection_end': 5628L,
        'selection_start': 5628L},
                       loc('../../../ProgramData/Anaconda2/lib/site-packages/numpy/lib/shape_base.py'): {'a'\
        'ttrib-starts': [('tile',
                          784)],
        'first-line': 777L,
        'folded-linenos': [],
        'sel-line': 784L,
        'sel-line-start': 22823L,
        'selection_end': 22831L,
        'selection_start': 22827L},
                       loc('../../../ProgramData/Anaconda2/lib/site-packages/plyfile.py'): {'a'\
        'ttrib-starts': [('PlyData',
                          153),
                         ('PlyData.read',
                          275)],
        'first-line': 159L,
        'folded-linenos': [],
        'sel-line': 283L,
        'sel-line-start': 7594L,
        'selection_end': 7594L,
        'selection_start': 7594L},
                       loc('../../../ProgramData/Anaconda2/lib/site-packages/pywavefront/__init__.py'): {'a'\
        'ttrib-starts': [('ObjParser',
                          63),
                         ('ObjParser.parse_f',
                          108)],
        'first-line': 101L,
        'folded-linenos': [],
        'sel-line': 124L,
        'sel-line-start': 4687L,
        'selection_end': 4704L,
        'selection_start': 4704L},
                       loc('../../../ProgramData/Anaconda2/lib/site-packages/scipy/io/matlab/mio.py'): {'a'\
        'ttrib-starts': [('savemat',
                          146)],
        'first-line': 169L,
        'folded-linenos': [],
        'sel-line': 192L,
        'sel-line-start': 6849L,
        'selection_end': 6849L,
        'selection_start': 6849L},
                       loc('../anaconda2/lib/python2.7/UserDict.py'): {'attr'\
        'ib-starts': [('UserDict',
                       2),
                      ('UserDict.__getitem__',
                       34)],
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 39L,
        'sel-line-start': 1421L,
        'selection_end': 1421L,
        'selection_start': 1421L},
                       loc('../anaconda2/lib/python2.7/csv.py'): {'attrib-st'\
        'arts': [('DictReader',
                  72),
                 ('DictReader.next',
                  103)],
        'first-line': 91L,
        'folded-linenos': [],
        'sel-line': 107L,
        'sel-line-start': 3328L,
        'selection_end': 3328L,
        'selection_start': 3328L},
                       loc('../anaconda2/lib/python2.7/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist',
                          76),
                         ('Artist.update',
                          840)],
        'first-line': 843L,
        'folded-linenos': [],
        'sel-line': 855L,
        'sel-line-start': 27499L,
        'selection_end': 27499L,
        'selection_start': 27499L},
                       loc('../anaconda2/lib/python2.7/site-packages/matplotlib/pyplot.py'): {'a'\
        'ttrib-starts': [('imshow',
                          3005)],
        'first-line': 3009L,
        'folded-linenos': [],
        'sel-line': 3021L,
        'sel-line-start': 98352L,
        'selection_end': 98352L,
        'selection_start': 98352L},
                       loc('../anaconda2/lib/python2.7/site-packages/yaml/scanner.py'): {'a'\
        'ttrib-starts': [('Scanner',
                          45),
                         ('Scanner.fetch_value',
                          541)],
        'first-line': 569L,
        'folded-linenos': [],
        'sel-line': 575L,
        'sel-line-start': 19223L,
        'selection_end': 19223L,
        'selection_start': 19223L},
                       loc('3D_models/hetvol/hetvol/smoke.vol'): {'attrib-st'\
        'arts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('Main.py'): {'attrib-starts': [],
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 461L,
        'selection_end': 483L,
        'selection_start': 483L},
                       loc('MainRonenTalmon.py'): {'attrib-starts': [('makeC'\
        'ircPath',
        24)],
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1179L,
        'selection_end': 1213L,
        'selection_start': 1213L},
                       loc('Main_.py'): {'attrib-starts': [],
        'first-line': 54L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 573L,
        'selection_end': 604L,
        'selection_start': 604L},
                       loc('Mymain.py'): {'attrib-starts': [],
        'first-line': 82L,
        'folded-linenos': [],
        'sel-line': 98L,
        'sel-line-start': 3250L,
        'selection_end': 3250L,
        'selection_start': 3250L},
                       loc('__main.py'): {'attrib-starts': [],
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 1586L,
        'selection_end': 1601L,
        'selection_start': 1592L},
                       loc('from mark/Main.py'): {'attrib-starts': [],
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 46L,
        'sel-line-start': 1316L,
        'selection_end': 1316L,
        'selection_start': 1316L},
                       loc('from mark/MainRonenTalmon.py'): {'attrib-starts': [],
        'first-line': 36L,
        'folded-linenos': [],
        'sel-line': 65L,
        'sel-line-start': 2047L,
        'selection_end': 2047L,
        'selection_start': 2047L},
                       loc('from mark/markCoreLib.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('from mark/markMitsubaLib.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('from mark/nextBestViewLib.py'): {'attrib-starts': [('S'\
        'cene',
        10),
        ('Scene.__init__',
         13)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 231L,
        'selection_end': 262L,
        'selection_start': 254L},
                       loc('mainMark.py'): {'attrib-starts': [],
        'first-line': 41L,
        'folded-linenos': [],
        'sel-line': 46L,
        'sel-line-start': 1325L,
        'selection_end': 1325L,
        'selection_start': 1325L},
                       loc('markCoreLib.py'): {'attrib-starts': [],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('markMitsubaLib.py'): {'attrib-starts': [('Mitsub'\
        'a',
        18),
        ('Mitsuba.__init__',
         22)],
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 1270L,
        'selection_end': 1270L,
        'selection_start': 1270L},
                       loc('miscGeometry.py'): {'attrib-starts': [('rotScene'\
        '2Mitsuba',
        37)],
        'first-line': 35L,
        'folded-linenos': [44L,
                           52L,
                           58L,
                           65L,
                           72L,
                           104L,
                           118L],
        'sel-line': 40L,
        'sel-line-start': 1025L,
        'selection_end': 1025L,
        'selection_start': 1025L},
                       loc('mitsubaWrapperLib.py'): {'attrib-starts': [('Mit'\
        'suba',
        26),
        ('Mitsuba.SetRectangleScreen',
         75)],
        'first-line': 75L,
        'folded-linenos': [],
        'sel-line': 84L,
        'sel-line-start': 3562L,
        'selection_end': 3637L,
        'selection_start': 3637L},
                       loc('mitsubaWrapperLib_.py'): {'attrib-starts': [],
        'first-line': 57L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 605L,
        'selection_end': 616L,
        'selection_start': 616L},
                       loc('nextBestViewLib.py'): {'attrib-starts': [('Mitsu'\
        'ba',
        29),
        ('Mitsuba.__init__',
         32)],
        'first-line': 21L,
        'folded-linenos': [32L,
                           73L,
                           88L,
                           109L,
                           143L,
                           182L,
                           194L],
        'sel-line': 44L,
        'sel-line-start': 1551L,
        'selection_end': 1569L,
        'selection_start': 1564L},
                       loc('projLocalPath.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 174L,
        'selection_end': 227L,
        'selection_start': 186L},
                       loc('renderedResult.exr'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('sendMyEmail.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 1773L,
        'selection_start': 0L},
                       loc('sim_results/hetvol_16-02-2017_14-45-25_pySceneInfo.mat'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('temp/Mymain.py'): {'attrib-starts': [],
        'first-line': 66L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L},
                       loc('voldata.py'): {'attrib-starts': [('vol2data',
        5)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 27L,
        'sel-line-start': 1365L,
        'selection_end': 1369L,
        'selection_start': 1369L}}
search.search-history = [u'scene_name',
                         u'nRuns',
                         u'scenario_path',
                         u'params.',
                         u'params',
                         u'show',
                         u'area',
                         u'rotZ',
                         u'rot',
                         u'target',
                         u'up',
                         u'diff',
                         u'radian',
                         u'rad',
                         u'emit',
                         u'mkdir',
                         u'far',
                         u'run',
                         u'light',
                         u'init']
testing.stored-results = (1,
                          [],
                          {})
versioncontrol.git.remote-history = ['https://github.com/Addalin/mitsuba_sim'\
                                     '.git']
